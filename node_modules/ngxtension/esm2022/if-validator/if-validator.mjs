import { Validators, } from '@angular/forms';
import { of } from 'rxjs';
/**
 * Simple Validation with If condition
 */
export function ifValidator(condition, validatorFn) {
    return (control) => {
        if (!condition(control)) {
            return null;
        }
        if (!Array.isArray(validatorFn)) {
            return validatorFn(control);
        }
        if (validatorFn.length === 0) {
            return null;
        }
        if (validatorFn.length === 1) {
            return validatorFn[0](control);
        }
        const composed = Validators.compose(validatorFn);
        return composed ? composed(control) : null;
    };
}
/**
 * With Async Validation
 */
export function ifAsyncValidator(condition, validatorFn) {
    return (control) => {
        if (!condition(control)) {
            return of(null);
        }
        return validatorFn(control);
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWYtdmFsaWRhdG9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vbGlicy9uZ3h0ZW5zaW9uL2lmLXZhbGlkYXRvci9zcmMvaWYtdmFsaWRhdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFHTixVQUFVLEdBR1YsTUFBTSxnQkFBZ0IsQ0FBQztBQUN4QixPQUFPLEVBQUUsRUFBRSxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBRTFCOztHQUVHO0FBQ0gsTUFBTSxVQUFVLFdBQVcsQ0FDMUIsU0FBNEMsRUFDNUMsV0FBd0M7SUFFeEMsT0FBTyxDQUFDLE9BQXdCLEVBQUUsRUFBRTtRQUNuQyxJQUFJLENBQUMsU0FBUyxDQUFjLE9BQU8sQ0FBQyxFQUFFLENBQUM7WUFDdEMsT0FBTyxJQUFJLENBQUM7UUFDYixDQUFDO1FBRUQsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLEVBQUUsQ0FBQztZQUNqQyxPQUFPLFdBQVcsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUM3QixDQUFDO1FBRUQsSUFBSSxXQUFXLENBQUMsTUFBTSxLQUFLLENBQUMsRUFBRSxDQUFDO1lBQzlCLE9BQU8sSUFBSSxDQUFDO1FBQ2IsQ0FBQztRQUVELElBQUksV0FBVyxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUUsQ0FBQztZQUM5QixPQUFPLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUNoQyxDQUFDO1FBRUQsTUFBTSxRQUFRLEdBQUcsVUFBVSxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUNqRCxPQUFPLFFBQVEsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7SUFDNUMsQ0FBQyxDQUFDO0FBQ0gsQ0FBQztBQUVEOztHQUVHO0FBQ0gsTUFBTSxVQUFVLGdCQUFnQixDQUMvQixTQUE0QyxFQUM1QyxXQUE2QjtJQUU3QixPQUFPLENBQUMsT0FBd0IsRUFBRSxFQUFFO1FBQ25DLElBQUksQ0FBQyxTQUFTLENBQWMsT0FBTyxDQUFDLEVBQUUsQ0FBQztZQUN0QyxPQUFPLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNqQixDQUFDO1FBRUQsT0FBTyxXQUFXLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDN0IsQ0FBQyxDQUFDO0FBQ0gsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG5cdEFic3RyYWN0Q29udHJvbCxcblx0Rm9ybUNvbnRyb2wsXG5cdFZhbGlkYXRvcnMsXG5cdHR5cGUgQXN5bmNWYWxpZGF0b3JGbixcblx0dHlwZSBWYWxpZGF0b3JGbixcbn0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgb2YgfSBmcm9tICdyeGpzJztcblxuLyoqXG4gKiBTaW1wbGUgVmFsaWRhdGlvbiB3aXRoIElmIGNvbmRpdGlvblxuICovXG5leHBvcnQgZnVuY3Rpb24gaWZWYWxpZGF0b3IoXG5cdGNvbmRpdGlvbjogKGNvbnRyb2w6IEZvcm1Db250cm9sKSA9PiBib29sZWFuLFxuXHR2YWxpZGF0b3JGbjogVmFsaWRhdG9yRm4gfCBWYWxpZGF0b3JGbltdLFxuKTogVmFsaWRhdG9yRm4ge1xuXHRyZXR1cm4gKGNvbnRyb2w6IEFic3RyYWN0Q29udHJvbCkgPT4ge1xuXHRcdGlmICghY29uZGl0aW9uKDxGb3JtQ29udHJvbD5jb250cm9sKSkge1xuXHRcdFx0cmV0dXJuIG51bGw7XG5cdFx0fVxuXG5cdFx0aWYgKCFBcnJheS5pc0FycmF5KHZhbGlkYXRvckZuKSkge1xuXHRcdFx0cmV0dXJuIHZhbGlkYXRvckZuKGNvbnRyb2wpO1xuXHRcdH1cblxuXHRcdGlmICh2YWxpZGF0b3JGbi5sZW5ndGggPT09IDApIHtcblx0XHRcdHJldHVybiBudWxsO1xuXHRcdH1cblxuXHRcdGlmICh2YWxpZGF0b3JGbi5sZW5ndGggPT09IDEpIHtcblx0XHRcdHJldHVybiB2YWxpZGF0b3JGblswXShjb250cm9sKTtcblx0XHR9XG5cblx0XHRjb25zdCBjb21wb3NlZCA9IFZhbGlkYXRvcnMuY29tcG9zZSh2YWxpZGF0b3JGbik7XG5cdFx0cmV0dXJuIGNvbXBvc2VkID8gY29tcG9zZWQoY29udHJvbCkgOiBudWxsO1xuXHR9O1xufVxuXG4vKipcbiAqIFdpdGggQXN5bmMgVmFsaWRhdGlvblxuICovXG5leHBvcnQgZnVuY3Rpb24gaWZBc3luY1ZhbGlkYXRvcihcblx0Y29uZGl0aW9uOiAoY29udHJvbDogRm9ybUNvbnRyb2wpID0+IGJvb2xlYW4sXG5cdHZhbGlkYXRvckZuOiBBc3luY1ZhbGlkYXRvckZuLFxuKTogQXN5bmNWYWxpZGF0b3JGbiB7XG5cdHJldHVybiAoY29udHJvbDogQWJzdHJhY3RDb250cm9sKSA9PiB7XG5cdFx0aWYgKCFjb25kaXRpb24oPEZvcm1Db250cm9sPmNvbnRyb2wpKSB7XG5cdFx0XHRyZXR1cm4gb2YobnVsbCk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHZhbGlkYXRvckZuKGNvbnRyb2wpO1xuXHR9O1xufVxuIl19