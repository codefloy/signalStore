import { computed, untracked } from '@angular/core';
import { toSignal } from '@angular/core/rxjs-interop';
import { assertInjector } from 'ngxtension/assert-injector';
/**
 * Function `toLazySignal()` is a proxy function that will call the original
 * `toSignal()` function when the returned signal is read for the first time.
 */
export function toLazySignal(source, options) {
    const injector = assertInjector(toLazySignal, options?.injector);
    let s;
    return computed(() => {
        if (!s) {
            s = untracked(() => toSignal(source, { ...options, injector }));
        }
        return s();
    });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG8tbGF6eS1zaWduYWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9saWJzL25neHRlbnNpb24vdG8tbGF6eS1zaWduYWwvc3JjL3RvLWxhenktc2lnbmFsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsU0FBUyxFQUFlLE1BQU0sZUFBZSxDQUFDO0FBQ2pFLE9BQU8sRUFBRSxRQUFRLEVBQXdCLE1BQU0sNEJBQTRCLENBQUM7QUFDNUUsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBNkI1RDs7O0dBR0c7QUFDSCxNQUFNLFVBQVUsWUFBWSxDQUMzQixNQUF1QyxFQUN2QyxPQUFnRDtJQUVoRCxNQUFNLFFBQVEsR0FBRyxjQUFjLENBQUMsWUFBWSxFQUFFLE9BQU8sRUFBRSxRQUFRLENBQUMsQ0FBQztJQUNqRSxJQUFJLENBQTJCLENBQUM7SUFFaEMsT0FBTyxRQUFRLENBQW1CLEdBQUcsRUFBRTtRQUN0QyxJQUFJLENBQUMsQ0FBQyxFQUFFLENBQUM7WUFDUixDQUFDLEdBQUcsU0FBUyxDQUFDLEdBQUcsRUFBRSxDQUFDLFFBQVEsQ0FBQyxNQUFNLEVBQUUsRUFBRSxHQUFHLE9BQU8sRUFBRSxRQUFRLEVBQVMsQ0FBQyxDQUFDLENBQUM7UUFDeEUsQ0FBQztRQUNELE9BQU8sQ0FBQyxFQUFFLENBQUM7SUFDWixDQUFDLENBQUMsQ0FBQztBQUNKLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb21wdXRlZCwgdW50cmFja2VkLCB0eXBlIFNpZ25hbCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgdG9TaWduYWwsIHR5cGUgVG9TaWduYWxPcHRpb25zIH0gZnJvbSAnQGFuZ3VsYXIvY29yZS9yeGpzLWludGVyb3AnO1xuaW1wb3J0IHsgYXNzZXJ0SW5qZWN0b3IgfSBmcm9tICduZ3h0ZW5zaW9uL2Fzc2VydC1pbmplY3Rvcic7XG5pbXBvcnQgdHlwZSB7IE9ic2VydmFibGUsIFN1YnNjcmliYWJsZSB9IGZyb20gJ3J4anMnO1xuXG50eXBlIFJldHVyblR5cGU8VCwgVT4gPSAoVCB8IFUpIHwgKFQgfCB1bmRlZmluZWQpIHwgKFQgfCBudWxsKSB8IFQ7XG5cbmV4cG9ydCBmdW5jdGlvbiB0b0xhenlTaWduYWw8VD4oXG5cdHNvdXJjZTogT2JzZXJ2YWJsZTxUPiB8IFN1YnNjcmliYWJsZTxUPixcbik6IFNpZ25hbDxUIHwgdW5kZWZpbmVkPjtcblxuZXhwb3J0IGZ1bmN0aW9uIHRvTGF6eVNpZ25hbDxUPihcblx0c291cmNlOiBPYnNlcnZhYmxlPFQ+IHwgU3Vic2NyaWJhYmxlPFQ+LFxuXHRvcHRpb25zOiBUb1NpZ25hbE9wdGlvbnMgJiB7IGluaXRpYWxWYWx1ZT86IHVuZGVmaW5lZDsgcmVxdWlyZVN5bmM/OiBmYWxzZSB9LFxuKTogU2lnbmFsPFQgfCB1bmRlZmluZWQ+O1xuXG5leHBvcnQgZnVuY3Rpb24gdG9MYXp5U2lnbmFsPFQ+KFxuXHRzb3VyY2U6IE9ic2VydmFibGU8VD4gfCBTdWJzY3JpYmFibGU8VD4sXG5cdG9wdGlvbnM6IFRvU2lnbmFsT3B0aW9ucyAmIHsgaW5pdGlhbFZhbHVlPzogbnVsbDsgcmVxdWlyZVN5bmM/OiBmYWxzZSB9LFxuKTogU2lnbmFsPFQgfCBudWxsPjtcblxuZXhwb3J0IGZ1bmN0aW9uIHRvTGF6eVNpZ25hbDxUPihcblx0c291cmNlOiBPYnNlcnZhYmxlPFQ+IHwgU3Vic2NyaWJhYmxlPFQ+LFxuXHRvcHRpb25zOiBUb1NpZ25hbE9wdGlvbnMgJiB7IGluaXRpYWxWYWx1ZT86IHVuZGVmaW5lZDsgcmVxdWlyZVN5bmM6IHRydWUgfSxcbik6IFNpZ25hbDxUPjtcblxuZXhwb3J0IGZ1bmN0aW9uIHRvTGF6eVNpZ25hbDxULCBjb25zdCBVIGV4dGVuZHMgVD4oXG5cdHNvdXJjZTogT2JzZXJ2YWJsZTxUPiB8IFN1YnNjcmliYWJsZTxUPixcblx0b3B0aW9uczogVG9TaWduYWxPcHRpb25zICYgeyBpbml0aWFsVmFsdWU6IFU7IHJlcXVpcmVTeW5jPzogZmFsc2UgfSxcbik6IFNpZ25hbDxUIHwgVT47XG5cbi8qKlxuICogRnVuY3Rpb24gYHRvTGF6eVNpZ25hbCgpYCBpcyBhIHByb3h5IGZ1bmN0aW9uIHRoYXQgd2lsbCBjYWxsIHRoZSBvcmlnaW5hbFxuICogYHRvU2lnbmFsKClgIGZ1bmN0aW9uIHdoZW4gdGhlIHJldHVybmVkIHNpZ25hbCBpcyByZWFkIGZvciB0aGUgZmlyc3QgdGltZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRvTGF6eVNpZ25hbDxULCBVID0gdW5kZWZpbmVkPihcblx0c291cmNlOiBPYnNlcnZhYmxlPFQ+IHwgU3Vic2NyaWJhYmxlPFQ+LFxuXHRvcHRpb25zPzogVG9TaWduYWxPcHRpb25zICYgeyBpbml0aWFsVmFsdWU/OiBVIH0sXG4pOiBTaWduYWw8UmV0dXJuVHlwZTxULCBVPj4ge1xuXHRjb25zdCBpbmplY3RvciA9IGFzc2VydEluamVjdG9yKHRvTGF6eVNpZ25hbCwgb3B0aW9ucz8uaW5qZWN0b3IpO1xuXHRsZXQgczogU2lnbmFsPFJldHVyblR5cGU8VCwgVT4+O1xuXG5cdHJldHVybiBjb21wdXRlZDxSZXR1cm5UeXBlPFQsIFU+PigoKSA9PiB7XG5cdFx0aWYgKCFzKSB7XG5cdFx0XHRzID0gdW50cmFja2VkKCgpID0+IHRvU2lnbmFsKHNvdXJjZSwgeyAuLi5vcHRpb25zLCBpbmplY3RvciB9IGFzIGFueSkpO1xuXHRcdH1cblx0XHRyZXR1cm4gcygpO1xuXHR9KTtcbn1cbiJdfQ==