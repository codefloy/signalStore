import { assertInInjectionContext, DestroyRef, inject } from '@angular/core';
import { repeat, Subject } from 'rxjs';
export function createRepeat(generalCountOrDestroyRef, destroyRef) {
    const [generalCount, _destroyRef] = parseArgs(generalCountOrDestroyRef, destroyRef);
    const repeat$ = new Subject();
    _destroyRef.onDestroy(() => repeat$.complete());
    const repeatFn = (count) => repeat({ count: count ?? generalCount, delay: () => repeat$ });
    repeatFn.emit = () => repeat$.next();
    return repeatFn;
}
function parseArgs(generalCountOrDestroyRef, destroyRef) {
    const isGeneralCount = typeof generalCountOrDestroyRef === 'number';
    const generalCount = isGeneralCount ? generalCountOrDestroyRef : undefined;
    destroyRef ??= !isGeneralCount ? generalCountOrDestroyRef : undefined;
    if (!destroyRef)
        assertInInjectionContext(createRepeat);
    destroyRef ??= inject(DestroyRef);
    return [generalCount, destroyRef];
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlYXRlLXJlcGVhdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL2xpYnMvbmd4dGVuc2lvbi9jcmVhdGUtcmVwZWF0L3NyYy9jcmVhdGUtcmVwZWF0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzdFLE9BQU8sRUFBRSxNQUFNLEVBQUUsT0FBTyxFQUFpQyxNQUFNLE1BQU0sQ0FBQztBQVd0RSxNQUFNLFVBQVUsWUFBWSxDQUMzQix3QkFBOEMsRUFDOUMsVUFBdUI7SUFFdkIsTUFBTSxDQUFDLFlBQVksRUFBRSxXQUFXLENBQUMsR0FBRyxTQUFTLENBQzVDLHdCQUF3QixFQUN4QixVQUFVLENBQ1YsQ0FBQztJQUVGLE1BQU0sT0FBTyxHQUFHLElBQUksT0FBTyxFQUFRLENBQUM7SUFFcEMsV0FBVyxDQUFDLFNBQVMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQztJQUVoRCxNQUFNLFFBQVEsR0FBRyxDQUFJLEtBQWMsRUFBRSxFQUFFLENBQ3RDLE1BQU0sQ0FBSSxFQUFFLEtBQUssRUFBRSxLQUFLLElBQUksWUFBWSxFQUFFLEtBQUssRUFBRSxHQUFHLEVBQUUsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDO0lBRW5FLFFBQVEsQ0FBQyxJQUFJLEdBQUcsR0FBRyxFQUFFLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxDQUFDO0lBRXJDLE9BQU8sUUFBUSxDQUFDO0FBQ2pCLENBQUM7QUFFRCxTQUFTLFNBQVMsQ0FDakIsd0JBQThDLEVBQzlDLFVBQXVCO0lBRXZCLE1BQU0sY0FBYyxHQUFHLE9BQU8sd0JBQXdCLEtBQUssUUFBUSxDQUFDO0lBRXBFLE1BQU0sWUFBWSxHQUFHLGNBQWMsQ0FBQyxDQUFDLENBQUMsd0JBQXdCLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQztJQUUzRSxVQUFVLEtBQUssQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLHdCQUF3QixDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUM7SUFFdEUsSUFBSSxDQUFDLFVBQVU7UUFBRSx3QkFBd0IsQ0FBQyxZQUFZLENBQUMsQ0FBQztJQUN4RCxVQUFVLEtBQUssTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBRWxDLE9BQU8sQ0FBQyxZQUFZLEVBQUUsVUFBVSxDQUFVLENBQUM7QUFDNUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFzc2VydEluSW5qZWN0aW9uQ29udGV4dCwgRGVzdHJveVJlZiwgaW5qZWN0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyByZXBlYXQsIFN1YmplY3QsIHR5cGUgTW9ub1R5cGVPcGVyYXRvckZ1bmN0aW9uIH0gZnJvbSAncnhqcyc7XG5cbnR5cGUgQ3JlYXRlUmVwZWF0ID0gKDxUPihjb3VudD86IG51bWJlcikgPT4gTW9ub1R5cGVPcGVyYXRvckZ1bmN0aW9uPFQ+KSAmIHtcblx0ZW1pdDogKCkgPT4gdm9pZDtcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVSZXBlYXQoZGVzdHJveVJlZj86IERlc3Ryb3lSZWYpOiBDcmVhdGVSZXBlYXQ7XG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlUmVwZWF0KFxuXHRnZW5lcmFsQ291bnQ/OiBudW1iZXIsXG5cdGRlc3Ryb3lSZWY/OiBEZXN0cm95UmVmLFxuKTogQ3JlYXRlUmVwZWF0O1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVJlcGVhdChcblx0Z2VuZXJhbENvdW50T3JEZXN0cm95UmVmPzogbnVtYmVyIHwgRGVzdHJveVJlZixcblx0ZGVzdHJveVJlZj86IERlc3Ryb3lSZWYsXG4pIHtcblx0Y29uc3QgW2dlbmVyYWxDb3VudCwgX2Rlc3Ryb3lSZWZdID0gcGFyc2VBcmdzKFxuXHRcdGdlbmVyYWxDb3VudE9yRGVzdHJveVJlZixcblx0XHRkZXN0cm95UmVmLFxuXHQpO1xuXG5cdGNvbnN0IHJlcGVhdCQgPSBuZXcgU3ViamVjdDx2b2lkPigpO1xuXG5cdF9kZXN0cm95UmVmLm9uRGVzdHJveSgoKSA9PiByZXBlYXQkLmNvbXBsZXRlKCkpO1xuXG5cdGNvbnN0IHJlcGVhdEZuID0gPFQ+KGNvdW50PzogbnVtYmVyKSA9PlxuXHRcdHJlcGVhdDxUPih7IGNvdW50OiBjb3VudCA/PyBnZW5lcmFsQ291bnQsIGRlbGF5OiAoKSA9PiByZXBlYXQkIH0pO1xuXG5cdHJlcGVhdEZuLmVtaXQgPSAoKSA9PiByZXBlYXQkLm5leHQoKTtcblxuXHRyZXR1cm4gcmVwZWF0Rm47XG59XG5cbmZ1bmN0aW9uIHBhcnNlQXJncyhcblx0Z2VuZXJhbENvdW50T3JEZXN0cm95UmVmPzogbnVtYmVyIHwgRGVzdHJveVJlZixcblx0ZGVzdHJveVJlZj86IERlc3Ryb3lSZWYsXG4pIHtcblx0Y29uc3QgaXNHZW5lcmFsQ291bnQgPSB0eXBlb2YgZ2VuZXJhbENvdW50T3JEZXN0cm95UmVmID09PSAnbnVtYmVyJztcblxuXHRjb25zdCBnZW5lcmFsQ291bnQgPSBpc0dlbmVyYWxDb3VudCA/IGdlbmVyYWxDb3VudE9yRGVzdHJveVJlZiA6IHVuZGVmaW5lZDtcblxuXHRkZXN0cm95UmVmID8/PSAhaXNHZW5lcmFsQ291bnQgPyBnZW5lcmFsQ291bnRPckRlc3Ryb3lSZWYgOiB1bmRlZmluZWQ7XG5cblx0aWYgKCFkZXN0cm95UmVmKSBhc3NlcnRJbkluamVjdGlvbkNvbnRleHQoY3JlYXRlUmVwZWF0KTtcblx0ZGVzdHJveVJlZiA/Pz0gaW5qZWN0KERlc3Ryb3lSZWYpO1xuXG5cdHJldHVybiBbZ2VuZXJhbENvdW50LCBkZXN0cm95UmVmXSBhcyBjb25zdDtcbn1cbiJdfQ==