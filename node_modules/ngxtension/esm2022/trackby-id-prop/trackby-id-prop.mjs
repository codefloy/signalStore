//INSPIRED BY https://medium.com/ngconf/make-trackby-easy-to-use-a3dd5f1f733b
import { NgForOf } from '@angular/common';
import { Directive, Input, inject } from '@angular/core';
import * as i0 from "@angular/core";
export class TrackById {
    constructor() {
        this.ngFor = inject((NgForOf), { self: true });
        this.ngFor.ngForTrackBy = (index, item) => item.id;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.0.3", ngImport: i0, type: TrackById, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "18.0.3", type: TrackById, isStandalone: true, selector: "[ngForTrackById]", inputs: { ngForOf: "ngForOf" }, ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.0.3", ngImport: i0, type: TrackById, decorators: [{
            type: Directive,
            args: [{
                    selector: '[ngForTrackById]',
                    standalone: true,
                }]
        }], ctorParameters: () => [], propDecorators: { ngForOf: [{
                type: Input
            }] } });
export class TrackByProp {
    constructor() {
        this.ngFor = inject((NgForOf), { self: true });
    }
    set ngForTrackByProp(trackByProp) {
        if (!trackByProp)
            return;
        this.ngFor.ngForTrackBy = (index, item) => item[trackByProp];
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.0.3", ngImport: i0, type: TrackByProp, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "18.0.3", type: TrackByProp, isStandalone: true, selector: "[ngForTrackByProp]", inputs: { ngForOf: "ngForOf", ngForTrackByProp: "ngForTrackByProp" }, ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.0.3", ngImport: i0, type: TrackByProp, decorators: [{
            type: Directive,
            args: [{
                    selector: '[ngForTrackByProp]',
                    standalone: true,
                }]
        }], propDecorators: { ngForOf: [{
                type: Input
            }], ngForTrackByProp: [{
                type: Input,
                args: [{ required: true }]
            }] } });
export const TRACK_BY_DIRECTIVES = [TrackById, TrackByProp];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhY2tieS1pZC1wcm9wLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vbGlicy9uZ3h0ZW5zaW9uL3RyYWNrYnktaWQtcHJvcC9zcmMvdHJhY2tieS1pZC1wcm9wLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDZFQUE2RTtBQUM3RSxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDMUMsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFtQixNQUFNLGVBQWUsQ0FBQzs7QUFNMUUsTUFBTSxPQUFPLFNBQVM7SUFJckI7UUFGUSxVQUFLLEdBQUcsTUFBTSxDQUFDLENBQUEsT0FBVSxDQUFBLEVBQUUsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQztRQUdsRCxJQUFJLENBQUMsS0FBSyxDQUFDLFlBQVksR0FBRyxDQUFDLEtBQWEsRUFBRSxJQUFPLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUM7SUFDL0QsQ0FBQzs4R0FOVyxTQUFTO2tHQUFULFNBQVM7OzJGQUFULFNBQVM7a0JBSnJCLFNBQVM7bUJBQUM7b0JBQ1YsUUFBUSxFQUFFLGtCQUFrQjtvQkFDNUIsVUFBVSxFQUFFLElBQUk7aUJBQ2hCO3dEQUVTLE9BQU87c0JBQWYsS0FBSzs7QUFZUCxNQUFNLE9BQU8sV0FBVztJQUp4QjtRQU1TLFVBQUssR0FBRyxNQUFNLENBQUMsQ0FBQSxPQUFVLENBQUEsRUFBRSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0tBT25EO0lBTEEsSUFDSSxnQkFBZ0IsQ0FBQyxXQUFvQjtRQUN4QyxJQUFJLENBQUMsV0FBVztZQUFFLE9BQU87UUFDekIsSUFBSSxDQUFDLEtBQUssQ0FBQyxZQUFZLEdBQUcsQ0FBQyxLQUFhLEVBQUUsSUFBTyxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDekUsQ0FBQzs4R0FSVyxXQUFXO2tHQUFYLFdBQVc7OzJGQUFYLFdBQVc7a0JBSnZCLFNBQVM7bUJBQUM7b0JBQ1YsUUFBUSxFQUFFLG9CQUFvQjtvQkFDOUIsVUFBVSxFQUFFLElBQUk7aUJBQ2hCOzhCQUVTLE9BQU87c0JBQWYsS0FBSztnQkFJRixnQkFBZ0I7c0JBRG5CLEtBQUs7dUJBQUMsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFOztBQU8xQixNQUFNLENBQUMsTUFBTSxtQkFBbUIsR0FBRyxDQUFDLFNBQVMsRUFBRSxXQUFXLENBQVUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vSU5TUElSRUQgQlkgaHR0cHM6Ly9tZWRpdW0uY29tL25nY29uZi9tYWtlLXRyYWNrYnktZWFzeS10by11c2UtYTNkZDVmMWY3MzNiXG5pbXBvcnQgeyBOZ0Zvck9mIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IERpcmVjdGl2ZSwgSW5wdXQsIGluamVjdCwgdHlwZSBOZ0l0ZXJhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBEaXJlY3RpdmUoe1xuXHRzZWxlY3RvcjogJ1tuZ0ZvclRyYWNrQnlJZF0nLFxuXHRzdGFuZGFsb25lOiB0cnVlLFxufSlcbmV4cG9ydCBjbGFzcyBUcmFja0J5SWQ8VCBleHRlbmRzIHsgaWQ6IHN0cmluZyB8IG51bWJlciB9PiB7XG5cdEBJbnB1dCgpIG5nRm9yT2YhOiBOZ0l0ZXJhYmxlPFQ+O1xuXHRwcml2YXRlIG5nRm9yID0gaW5qZWN0KE5nRm9yT2Y8VD4sIHsgc2VsZjogdHJ1ZSB9KTtcblxuXHRjb25zdHJ1Y3RvcigpIHtcblx0XHR0aGlzLm5nRm9yLm5nRm9yVHJhY2tCeSA9IChpbmRleDogbnVtYmVyLCBpdGVtOiBUKSA9PiBpdGVtLmlkO1xuXHR9XG59XG5cbkBEaXJlY3RpdmUoe1xuXHRzZWxlY3RvcjogJ1tuZ0ZvclRyYWNrQnlQcm9wXScsXG5cdHN0YW5kYWxvbmU6IHRydWUsXG59KVxuZXhwb3J0IGNsYXNzIFRyYWNrQnlQcm9wPFQ+IHtcblx0QElucHV0KCkgbmdGb3JPZiE6IE5nSXRlcmFibGU8VD47XG5cdHByaXZhdGUgbmdGb3IgPSBpbmplY3QoTmdGb3JPZjxUPiwgeyBzZWxmOiB0cnVlIH0pO1xuXG5cdEBJbnB1dCh7IHJlcXVpcmVkOiB0cnVlIH0pXG5cdHNldCBuZ0ZvclRyYWNrQnlQcm9wKHRyYWNrQnlQcm9wOiBrZXlvZiBUKSB7XG5cdFx0aWYgKCF0cmFja0J5UHJvcCkgcmV0dXJuO1xuXHRcdHRoaXMubmdGb3IubmdGb3JUcmFja0J5ID0gKGluZGV4OiBudW1iZXIsIGl0ZW06IFQpID0+IGl0ZW1bdHJhY2tCeVByb3BdO1xuXHR9XG59XG5cbmV4cG9ydCBjb25zdCBUUkFDS19CWV9ESVJFQ1RJVkVTID0gW1RyYWNrQnlJZCwgVHJhY2tCeVByb3BdIGFzIGNvbnN0O1xuIl19