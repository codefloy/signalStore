import { computed, signal, } from '@angular/core';
/**
 * Creates a writable signal with a `value` property.
 *
 * @example
 * const state = createSignal({ count: 0 });
 *
 * effect(() => {
 *  // Works as expected
 *  console.log(state.value.count);
 * })
 *
 * // Effect will log: 1
 *
 * state.value = { count: 1 }; // Sets the value
 * // Effect will log: 1
 *
 * double = createComputed(() => state.value.count * 2);
 *
 * console.log(double.value); // Logs 2
 *
 * @param args - Arguments to pass to `signal()`.
 * @returns A writable signal with a `value` property.
 */
export function createSignal(...args) {
    const sig = signal(...args);
    return Object.defineProperty(sig, 'value', {
        get: sig.asReadonly(),
        set: sig.set.bind(sig),
    });
}
/**
 * Creates a computed signal with a `value` property.
 * @param args - Arguments to pass to `computed()`.
 * @returns A computed signal with a `value` property.
 * @see createSignal
 */
export function createComputed(...args) {
    const sig = computed(...args);
    return Object.defineProperty(sig, 'value', { get: sig });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlYXRlLXNpZ25hbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL2xpYnMvbmd4dGVuc2lvbi9jcmVhdGUtc2lnbmFsL3NyYy9jcmVhdGUtc2lnbmFsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTixRQUFRLEVBQ1IsTUFBTSxHQUdOLE1BQU0sZUFBZSxDQUFDO0FBRXZCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBc0JHO0FBQ0gsTUFBTSxVQUFVLFlBQVksQ0FDM0IsR0FBRyxJQUFrQztJQUVyQyxNQUFNLEdBQUcsR0FBRyxNQUFNLENBQUksR0FBRyxJQUFJLENBQUMsQ0FBQztJQUMvQixPQUFPLE1BQU0sQ0FBQyxjQUFjLENBQUMsR0FBRyxFQUFFLE9BQU8sRUFBRTtRQUMxQyxHQUFHLEVBQUUsR0FBRyxDQUFDLFVBQVUsRUFBRTtRQUNyQixHQUFHLEVBQUUsR0FBRyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDO0tBQ3RCLENBQXFDLENBQUM7QUFDeEMsQ0FBQztBQUVEOzs7OztHQUtHO0FBQ0gsTUFBTSxVQUFVLGNBQWMsQ0FDN0IsR0FBRyxJQUFvQztJQUV2QyxNQUFNLEdBQUcsR0FBRyxRQUFRLENBQUksR0FBRyxJQUFJLENBQUMsQ0FBQztJQUNqQyxPQUFPLE1BQU0sQ0FBQyxjQUFjLENBQUMsR0FBRyxFQUFFLE9BQU8sRUFBRSxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsQ0FFdEQsQ0FBQztBQUNILENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuXHRjb21wdXRlZCxcblx0c2lnbmFsLFxuXHR0eXBlIFNpZ25hbCxcblx0dHlwZSBXcml0YWJsZVNpZ25hbCxcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbi8qKlxuICogQ3JlYXRlcyBhIHdyaXRhYmxlIHNpZ25hbCB3aXRoIGEgYHZhbHVlYCBwcm9wZXJ0eS5cbiAqXG4gKiBAZXhhbXBsZVxuICogY29uc3Qgc3RhdGUgPSBjcmVhdGVTaWduYWwoeyBjb3VudDogMCB9KTtcbiAqXG4gKiBlZmZlY3QoKCkgPT4ge1xuICogIC8vIFdvcmtzIGFzIGV4cGVjdGVkXG4gKiAgY29uc29sZS5sb2coc3RhdGUudmFsdWUuY291bnQpO1xuICogfSlcbiAqXG4gKiAvLyBFZmZlY3Qgd2lsbCBsb2c6IDFcbiAqXG4gKiBzdGF0ZS52YWx1ZSA9IHsgY291bnQ6IDEgfTsgLy8gU2V0cyB0aGUgdmFsdWVcbiAqIC8vIEVmZmVjdCB3aWxsIGxvZzogMVxuICpcbiAqIGRvdWJsZSA9IGNyZWF0ZUNvbXB1dGVkKCgpID0+IHN0YXRlLnZhbHVlLmNvdW50ICogMik7XG4gKlxuICogY29uc29sZS5sb2coZG91YmxlLnZhbHVlKTsgLy8gTG9ncyAyXG4gKlxuICogQHBhcmFtIGFyZ3MgLSBBcmd1bWVudHMgdG8gcGFzcyB0byBgc2lnbmFsKClgLlxuICogQHJldHVybnMgQSB3cml0YWJsZSBzaWduYWwgd2l0aCBhIGB2YWx1ZWAgcHJvcGVydHkuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVTaWduYWw8VD4oXG5cdC4uLmFyZ3M6IFBhcmFtZXRlcnM8dHlwZW9mIHNpZ25hbDxUPj5cbik6IFdyaXRhYmxlU2lnbmFsPFQ+ICYgeyB2YWx1ZTogVCB9IHtcblx0Y29uc3Qgc2lnID0gc2lnbmFsPFQ+KC4uLmFyZ3MpO1xuXHRyZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KHNpZywgJ3ZhbHVlJywge1xuXHRcdGdldDogc2lnLmFzUmVhZG9ubHkoKSxcblx0XHRzZXQ6IHNpZy5zZXQuYmluZChzaWcpLFxuXHR9KSBhcyBXcml0YWJsZVNpZ25hbDxUPiAmIHsgdmFsdWU6IFQgfTtcbn1cblxuLyoqXG4gKiBDcmVhdGVzIGEgY29tcHV0ZWQgc2lnbmFsIHdpdGggYSBgdmFsdWVgIHByb3BlcnR5LlxuICogQHBhcmFtIGFyZ3MgLSBBcmd1bWVudHMgdG8gcGFzcyB0byBgY29tcHV0ZWQoKWAuXG4gKiBAcmV0dXJucyBBIGNvbXB1dGVkIHNpZ25hbCB3aXRoIGEgYHZhbHVlYCBwcm9wZXJ0eS5cbiAqIEBzZWUgY3JlYXRlU2lnbmFsXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDb21wdXRlZDxUPihcblx0Li4uYXJnczogUGFyYW1ldGVyczx0eXBlb2YgY29tcHV0ZWQ8VD4+XG4pOiBTaWduYWw8VD4gJiB7IHZhbHVlOiBUIH0ge1xuXHRjb25zdCBzaWcgPSBjb21wdXRlZDxUPiguLi5hcmdzKTtcblx0cmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShzaWcsICd2YWx1ZScsIHsgZ2V0OiBzaWcgfSkgYXMgU2lnbmFsPFQ+ICYge1xuXHRcdHZhbHVlOiBUO1xuXHR9O1xufVxuIl19