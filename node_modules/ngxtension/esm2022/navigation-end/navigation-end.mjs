import { inject, runInInjectionContext } from '@angular/core';
import { takeUntilDestroyed } from '@angular/core/rxjs-interop';
import { NavigationEnd, Router } from '@angular/router';
import { assertInjector } from 'ngxtension/assert-injector';
import { filter } from 'rxjs';
/**
 * Creates an Observable that emits when a navigation ends.
 * @returns An Observable of NavigationEnd events.
 */
export function injectNavigationEnd(injector) {
    injector = assertInjector(injectNavigationEnd, injector);
    return runInInjectionContext(injector, () => {
        return inject(Router).events.pipe(filter((event) => event instanceof NavigationEnd), takeUntilDestroyed());
    });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF2aWdhdGlvbi1lbmQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9saWJzL25neHRlbnNpb24vbmF2aWdhdGlvbi1lbmQvc3JjL25hdmlnYXRpb24tZW5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBWSxNQUFNLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDeEUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDaEUsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLEVBQWMsTUFBTSxpQkFBaUIsQ0FBQztBQUNwRSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDNUQsT0FBTyxFQUFFLE1BQU0sRUFBbUIsTUFBTSxNQUFNLENBQUM7QUFFL0M7OztHQUdHO0FBQ0gsTUFBTSxVQUFVLG1CQUFtQixDQUNsQyxRQUFtQjtJQUVuQixRQUFRLEdBQUcsY0FBYyxDQUFDLG1CQUFtQixFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBQ3pELE9BQU8scUJBQXFCLENBQUMsUUFBUSxFQUFFLEdBQUcsRUFBRTtRQUMzQyxPQUFPLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUNoQyxNQUFNLENBQ0wsQ0FBQyxLQUFZLEVBQTBCLEVBQUUsQ0FDeEMsS0FBSyxZQUFZLGFBQWEsQ0FDL0IsRUFDRCxrQkFBa0IsRUFBRSxDQUNwQixDQUFDO0lBQ0gsQ0FBQyxDQUFDLENBQUM7QUFDSixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0b3IsIGluamVjdCwgcnVuSW5JbmplY3Rpb25Db250ZXh0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyB0YWtlVW50aWxEZXN0cm95ZWQgfSBmcm9tICdAYW5ndWxhci9jb3JlL3J4anMtaW50ZXJvcCc7XG5pbXBvcnQgeyBOYXZpZ2F0aW9uRW5kLCBSb3V0ZXIsIHR5cGUgRXZlbnQgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuaW1wb3J0IHsgYXNzZXJ0SW5qZWN0b3IgfSBmcm9tICduZ3h0ZW5zaW9uL2Fzc2VydC1pbmplY3Rvcic7XG5pbXBvcnQgeyBmaWx0ZXIsIHR5cGUgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuXG4vKipcbiAqIENyZWF0ZXMgYW4gT2JzZXJ2YWJsZSB0aGF0IGVtaXRzIHdoZW4gYSBuYXZpZ2F0aW9uIGVuZHMuXG4gKiBAcmV0dXJucyBBbiBPYnNlcnZhYmxlIG9mIE5hdmlnYXRpb25FbmQgZXZlbnRzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gaW5qZWN0TmF2aWdhdGlvbkVuZChcblx0aW5qZWN0b3I/OiBJbmplY3Rvcixcbik6IE9ic2VydmFibGU8TmF2aWdhdGlvbkVuZD4ge1xuXHRpbmplY3RvciA9IGFzc2VydEluamVjdG9yKGluamVjdE5hdmlnYXRpb25FbmQsIGluamVjdG9yKTtcblx0cmV0dXJuIHJ1bkluSW5qZWN0aW9uQ29udGV4dChpbmplY3RvciwgKCkgPT4ge1xuXHRcdHJldHVybiBpbmplY3QoUm91dGVyKS5ldmVudHMucGlwZShcblx0XHRcdGZpbHRlcihcblx0XHRcdFx0KGV2ZW50OiBFdmVudCk6IGV2ZW50IGlzIE5hdmlnYXRpb25FbmQgPT5cblx0XHRcdFx0XHRldmVudCBpbnN0YW5jZW9mIE5hdmlnYXRpb25FbmQsXG5cdFx0XHQpLFxuXHRcdFx0dGFrZVVudGlsRGVzdHJveWVkKCksXG5cdFx0KTtcblx0fSk7XG59XG4iXX0=