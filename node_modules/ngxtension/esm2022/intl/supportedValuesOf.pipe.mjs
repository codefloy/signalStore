import { Pipe } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * This pipe is a wrapper around the [Intl.supportedValuesOf](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/supportedValuesOf) method.
 *
 * @returns An array containing the supported calendar, collation, currency, numbering systems, or unit values supported by the implementation.
 */
export class SupportedValuesOf {
    /**
     * Transforms a key into an array containing the supported calendar, collation, currency, numbering systems, or unit values supported by the implementation.
     *
     * @param key A key string indicating the category of values to be returned. This is one of: "calendar", "collation", "currency","numberingSystem", "timeZone", "unit"
     * @returns An array containing the supported values for the key or an empty array if the input is invalid.
     */
    transform(key) {
        try {
            return Intl.supportedValuesOf(key);
        }
        catch (e) {
            console.error(e);
            return [];
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.0.3", ngImport: i0, type: SupportedValuesOf, deps: [], target: i0.ɵɵFactoryTarget.Pipe }); }
    static { this.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "14.0.0", version: "18.0.3", ngImport: i0, type: SupportedValuesOf, isStandalone: true, name: "supportedValuesOf" }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.0.3", ngImport: i0, type: SupportedValuesOf, decorators: [{
            type: Pipe,
            args: [{
                    name: 'supportedValuesOf',
                    standalone: true,
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3VwcG9ydGVkVmFsdWVzT2YucGlwZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL2xpYnMvbmd4dGVuc2lvbi9pbnRsL3NyYy9zdXBwb3J0ZWRWYWx1ZXNPZi5waXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQXNCLE1BQU0sZUFBZSxDQUFDOztBQUV6RDs7OztHQUlHO0FBS0gsTUFBTSxPQUFPLGlCQUFpQjtJQUM3Qjs7Ozs7T0FLRztJQUNILFNBQVMsQ0FDUixHQU1TO1FBRVQsSUFBSSxDQUFDO1lBQ0osT0FBTyxJQUFJLENBQUMsaUJBQWlCLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDcEMsQ0FBQztRQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUM7WUFDWixPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ2pCLE9BQU8sRUFBRSxDQUFDO1FBQ1gsQ0FBQztJQUNGLENBQUM7OEdBdEJXLGlCQUFpQjs0R0FBakIsaUJBQWlCOzsyRkFBakIsaUJBQWlCO2tCQUo3QixJQUFJO21CQUFDO29CQUNMLElBQUksRUFBRSxtQkFBbUI7b0JBQ3pCLFVBQVUsRUFBRSxJQUFJO2lCQUNoQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBpcGUsIHR5cGUgUGlwZVRyYW5zZm9ybSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG4vKipcbiAqIFRoaXMgcGlwZSBpcyBhIHdyYXBwZXIgYXJvdW5kIHRoZSBbSW50bC5zdXBwb3J0ZWRWYWx1ZXNPZl0oaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvSW50bC9zdXBwb3J0ZWRWYWx1ZXNPZikgbWV0aG9kLlxuICpcbiAqIEByZXR1cm5zIEFuIGFycmF5IGNvbnRhaW5pbmcgdGhlIHN1cHBvcnRlZCBjYWxlbmRhciwgY29sbGF0aW9uLCBjdXJyZW5jeSwgbnVtYmVyaW5nIHN5c3RlbXMsIG9yIHVuaXQgdmFsdWVzIHN1cHBvcnRlZCBieSB0aGUgaW1wbGVtZW50YXRpb24uXG4gKi9cbkBQaXBlKHtcblx0bmFtZTogJ3N1cHBvcnRlZFZhbHVlc09mJyxcblx0c3RhbmRhbG9uZTogdHJ1ZSxcbn0pXG5leHBvcnQgY2xhc3MgU3VwcG9ydGVkVmFsdWVzT2YgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcblx0LyoqXG5cdCAqIFRyYW5zZm9ybXMgYSBrZXkgaW50byBhbiBhcnJheSBjb250YWluaW5nIHRoZSBzdXBwb3J0ZWQgY2FsZW5kYXIsIGNvbGxhdGlvbiwgY3VycmVuY3ksIG51bWJlcmluZyBzeXN0ZW1zLCBvciB1bml0IHZhbHVlcyBzdXBwb3J0ZWQgYnkgdGhlIGltcGxlbWVudGF0aW9uLlxuXHQgKlxuXHQgKiBAcGFyYW0ga2V5IEEga2V5IHN0cmluZyBpbmRpY2F0aW5nIHRoZSBjYXRlZ29yeSBvZiB2YWx1ZXMgdG8gYmUgcmV0dXJuZWQuIFRoaXMgaXMgb25lIG9mOiBcImNhbGVuZGFyXCIsIFwiY29sbGF0aW9uXCIsIFwiY3VycmVuY3lcIixcIm51bWJlcmluZ1N5c3RlbVwiLCBcInRpbWVab25lXCIsIFwidW5pdFwiXG5cdCAqIEByZXR1cm5zIEFuIGFycmF5IGNvbnRhaW5pbmcgdGhlIHN1cHBvcnRlZCB2YWx1ZXMgZm9yIHRoZSBrZXkgb3IgYW4gZW1wdHkgYXJyYXkgaWYgdGhlIGlucHV0IGlzIGludmFsaWQuXG5cdCAqL1xuXHR0cmFuc2Zvcm0oXG5cdFx0a2V5OlxuXHRcdFx0fCAnY2FsZW5kYXInXG5cdFx0XHR8ICdjb2xsYXRpb24nXG5cdFx0XHR8ICdjdXJyZW5jeSdcblx0XHRcdHwgJ251bWJlcmluZ1N5c3RlbSdcblx0XHRcdHwgJ3RpbWVab25lJ1xuXHRcdFx0fCAndW5pdCcsXG5cdCk6IHN0cmluZ1tdIHtcblx0XHR0cnkge1xuXHRcdFx0cmV0dXJuIEludGwuc3VwcG9ydGVkVmFsdWVzT2Yoa2V5KTtcblx0XHR9IGNhdGNoIChlKSB7XG5cdFx0XHRjb25zb2xlLmVycm9yKGUpO1xuXHRcdFx0cmV0dXJuIFtdO1xuXHRcdH1cblx0fVxufVxuIl19