/**
 * Original code by PMNDRS
 * Source: https://github.com/pmndrs/react-three-rapier
 * License: MIT License (or specify the appropriate license)
 *
 * Creates a proxy that will create a singleton instance of the given class
 * when a property is accessed, and not before.
 *
 * @returns A proxy and a reset function, so that the instance can created again
 */
export function createSingletonProxy(
/**
 * A function that returns a new instance of the class
 */
createInstance) {
    let instance;
    const handler = {
        get(_, prop) {
            if (!instance) {
                instance = createInstance();
            }
            return Reflect.get(instance, prop);
        },
        set(_, prop, value) {
            if (!instance) {
                instance = createInstance();
            }
            return Reflect.set(instance, prop, value);
        },
    };
    const proxy = new Proxy({}, handler);
    const reset = () => {
        instance = undefined;
    };
    /**
     * Return the proxy and a reset function
     */
    return { proxy, reset };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2luZ2xldG9uLXByb3h5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vbGlicy9uZ3h0ZW5zaW9uL3NpbmdsZXRvbi1wcm94eS9zcmMvc2luZ2xldG9uLXByb3h5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7R0FTRztBQUNILE1BQU0sVUFBVSxvQkFBb0I7QUFJbkM7O0dBRUc7QUFDSCxjQUEwQjtJQUUxQixJQUFJLFFBQW9DLENBQUM7SUFFekMsTUFBTSxPQUFPLEdBQWlDO1FBQzdDLEdBQUcsQ0FBQyxDQUFDLEVBQUUsSUFBSTtZQUNWLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztnQkFDZixRQUFRLEdBQUcsY0FBYyxFQUFFLENBQUM7WUFDN0IsQ0FBQztZQUNELE9BQU8sT0FBTyxDQUFDLEdBQUcsQ0FBQyxRQUFTLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDckMsQ0FBQztRQUNELEdBQUcsQ0FBQyxDQUFDLEVBQUUsSUFBSSxFQUFFLEtBQUs7WUFDakIsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO2dCQUNmLFFBQVEsR0FBRyxjQUFjLEVBQUUsQ0FBQztZQUM3QixDQUFDO1lBQ0QsT0FBTyxPQUFPLENBQUMsR0FBRyxDQUFDLFFBQVMsRUFBRSxJQUFJLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDNUMsQ0FBQztLQUNELENBQUM7SUFFRixNQUFNLEtBQUssR0FBRyxJQUFJLEtBQUssQ0FBQyxFQUFvQixFQUFFLE9BQU8sQ0FBbUIsQ0FBQztJQUV6RSxNQUFNLEtBQUssR0FBRyxHQUFHLEVBQUU7UUFDbEIsUUFBUSxHQUFHLFNBQVMsQ0FBQztJQUN0QixDQUFDLENBQUM7SUFFRjs7T0FFRztJQUNILE9BQU8sRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLENBQUM7QUFDekIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogT3JpZ2luYWwgY29kZSBieSBQTU5EUlNcbiAqIFNvdXJjZTogaHR0cHM6Ly9naXRodWIuY29tL3BtbmRycy9yZWFjdC10aHJlZS1yYXBpZXJcbiAqIExpY2Vuc2U6IE1JVCBMaWNlbnNlIChvciBzcGVjaWZ5IHRoZSBhcHByb3ByaWF0ZSBsaWNlbnNlKVxuICpcbiAqIENyZWF0ZXMgYSBwcm94eSB0aGF0IHdpbGwgY3JlYXRlIGEgc2luZ2xldG9uIGluc3RhbmNlIG9mIHRoZSBnaXZlbiBjbGFzc1xuICogd2hlbiBhIHByb3BlcnR5IGlzIGFjY2Vzc2VkLCBhbmQgbm90IGJlZm9yZS5cbiAqXG4gKiBAcmV0dXJucyBBIHByb3h5IGFuZCBhIHJlc2V0IGZ1bmN0aW9uLCBzbyB0aGF0IHRoZSBpbnN0YW5jZSBjYW4gY3JlYXRlZCBhZ2FpblxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU2luZ2xldG9uUHJveHk8XG5cdFNpbmdsZXRvbkNsYXNzIGV4dGVuZHMgb2JqZWN0LFxuXHRDcmVhdGlvbkZuIGV4dGVuZHMgKCkgPT4gU2luZ2xldG9uQ2xhc3MgPSAoKSA9PiBTaW5nbGV0b25DbGFzcyxcbj4oXG5cdC8qKlxuXHQgKiBBIGZ1bmN0aW9uIHRoYXQgcmV0dXJucyBhIG5ldyBpbnN0YW5jZSBvZiB0aGUgY2xhc3Ncblx0ICovXG5cdGNyZWF0ZUluc3RhbmNlOiBDcmVhdGlvbkZuLFxuKTogeyBwcm94eTogU2luZ2xldG9uQ2xhc3M7IHJlc2V0OiAoKSA9PiB2b2lkIH0ge1xuXHRsZXQgaW5zdGFuY2U6IFNpbmdsZXRvbkNsYXNzIHwgdW5kZWZpbmVkO1xuXG5cdGNvbnN0IGhhbmRsZXI6IFByb3h5SGFuZGxlcjxTaW5nbGV0b25DbGFzcz4gPSB7XG5cdFx0Z2V0KF8sIHByb3ApIHtcblx0XHRcdGlmICghaW5zdGFuY2UpIHtcblx0XHRcdFx0aW5zdGFuY2UgPSBjcmVhdGVJbnN0YW5jZSgpO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIFJlZmxlY3QuZ2V0KGluc3RhbmNlISwgcHJvcCk7XG5cdFx0fSxcblx0XHRzZXQoXywgcHJvcCwgdmFsdWUpIHtcblx0XHRcdGlmICghaW5zdGFuY2UpIHtcblx0XHRcdFx0aW5zdGFuY2UgPSBjcmVhdGVJbnN0YW5jZSgpO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIFJlZmxlY3Quc2V0KGluc3RhbmNlISwgcHJvcCwgdmFsdWUpO1xuXHRcdH0sXG5cdH07XG5cblx0Y29uc3QgcHJveHkgPSBuZXcgUHJveHkoe30gYXMgU2luZ2xldG9uQ2xhc3MsIGhhbmRsZXIpIGFzIFNpbmdsZXRvbkNsYXNzO1xuXG5cdGNvbnN0IHJlc2V0ID0gKCkgPT4ge1xuXHRcdGluc3RhbmNlID0gdW5kZWZpbmVkO1xuXHR9O1xuXG5cdC8qKlxuXHQgKiBSZXR1cm4gdGhlIHByb3h5IGFuZCBhIHJlc2V0IGZ1bmN0aW9uXG5cdCAqL1xuXHRyZXR1cm4geyBwcm94eSwgcmVzZXQgfTtcbn1cbiJdfQ==