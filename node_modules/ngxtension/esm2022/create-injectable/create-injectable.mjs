import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
export function createInjectable(factory, { providedIn = 'root' } = {}) {
    class _Injectable {
        constructor() {
            const result = factory();
            for (const key of Reflect.ownKeys(result)) {
                Object.defineProperty(this, key, {
                    get: () => result[key],
                    set: (value) => {
                        result[key] = value;
                    },
                    enumerable: true,
                    configurable: true,
                });
            }
        }
        static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.0.3", ngImport: i0, type: _Injectable, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }
        static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "18.0.3", ngImport: i0, type: _Injectable, providedIn: providedIn === 'scoped' ? null : providedIn }); }
    }
    i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.0.3", ngImport: i0, type: _Injectable, decorators: [{
                type: Injectable,
                args: [{ providedIn: providedIn === 'scoped' ? null : providedIn }]
            }], ctorParameters: () => [] });
    if (factory.name) {
        Object.defineProperty(_Injectable, 'name', {
            value: `_Injectable_${factory.name}`,
        });
    }
    return _Injectable;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlYXRlLWluamVjdGFibGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9saWJzL25neHRlbnNpb24vY3JlYXRlLWluamVjdGFibGUvc3JjL2NyZWF0ZS1pbmplY3RhYmxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQWEsTUFBTSxlQUFlLENBQUM7O0FBRXRELE1BQU0sVUFBVSxnQkFBZ0IsQ0FDL0IsT0FBaUIsRUFDakIsRUFBRSxVQUFVLEdBQUcsTUFBTSxLQUFzRCxFQUFFO0lBRTdFLE1BQ00sV0FBVztRQUNoQjtZQUNDLE1BQU0sTUFBTSxHQUFRLE9BQU8sRUFBRSxDQUFDO1lBRTlCLEtBQUssTUFBTSxHQUFHLElBQUksT0FBTyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDO2dCQUMzQyxNQUFNLENBQUMsY0FBYyxDQUFDLElBQUksRUFBRSxHQUFHLEVBQUU7b0JBQ2hDLEdBQUcsRUFBRSxHQUFHLEVBQUUsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDO29CQUN0QixHQUFHLEVBQUUsQ0FBQyxLQUFVLEVBQUUsRUFBRTt3QkFDbkIsTUFBTSxDQUFDLEdBQUcsQ0FBQyxHQUFHLEtBQUssQ0FBQztvQkFDckIsQ0FBQztvQkFDRCxVQUFVLEVBQUUsSUFBSTtvQkFDaEIsWUFBWSxFQUFFLElBQUk7aUJBQ2xCLENBQUMsQ0FBQztZQUNKLENBQUM7UUFDRixDQUFDO2tIQWRJLFdBQVc7c0hBQVgsV0FBVyxjQURTLFVBQVUsS0FBSyxRQUFRLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsVUFBVTs7K0ZBQy9ELFdBQVc7c0JBRGhCLFVBQVU7dUJBQUMsRUFBRSxVQUFVLEVBQUUsVUFBVSxLQUFLLFFBQVEsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxVQUFVLEVBQUU7O0lBa0J2RSxJQUFJLE9BQU8sQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUNsQixNQUFNLENBQUMsY0FBYyxDQUFDLFdBQVcsRUFBRSxNQUFNLEVBQUU7WUFDMUMsS0FBSyxFQUFFLGVBQWUsT0FBTyxDQUFDLElBQUksRUFBRTtTQUNwQyxDQUFDLENBQUM7SUFDSixDQUFDO0lBRUQsT0FBTyxXQUF5QyxDQUFDO0NBQ2pEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSwgdHlwZSBUeXBlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVJbmplY3RhYmxlPFRGYWN0b3J5IGV4dGVuZHMgKC4uLmFyZ3M6IGFueVtdKSA9PiBvYmplY3Q+KFxuXHRmYWN0b3J5OiBURmFjdG9yeSxcblx0eyBwcm92aWRlZEluID0gJ3Jvb3QnIH06IHsgcHJvdmlkZWRJbj86ICdyb290JyB8ICdwbGF0Zm9ybScgfCAnc2NvcGVkJyB9ID0ge30sXG4pOiBUeXBlPFJldHVyblR5cGU8VEZhY3Rvcnk+PiB7XG5cdEBJbmplY3RhYmxlKHsgcHJvdmlkZWRJbjogcHJvdmlkZWRJbiA9PT0gJ3Njb3BlZCcgPyBudWxsIDogcHJvdmlkZWRJbiB9KVxuXHRjbGFzcyBfSW5qZWN0YWJsZSB7XG5cdFx0Y29uc3RydWN0b3IoKSB7XG5cdFx0XHRjb25zdCByZXN1bHQ6IGFueSA9IGZhY3RvcnkoKTtcblxuXHRcdFx0Zm9yIChjb25zdCBrZXkgb2YgUmVmbGVjdC5vd25LZXlzKHJlc3VsdCkpIHtcblx0XHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIGtleSwge1xuXHRcdFx0XHRcdGdldDogKCkgPT4gcmVzdWx0W2tleV0sXG5cdFx0XHRcdFx0c2V0OiAodmFsdWU6IGFueSkgPT4ge1xuXHRcdFx0XHRcdFx0cmVzdWx0W2tleV0gPSB2YWx1ZTtcblx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdGVudW1lcmFibGU6IHRydWUsXG5cdFx0XHRcdFx0Y29uZmlndXJhYmxlOiB0cnVlLFxuXHRcdFx0XHR9KTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRpZiAoZmFjdG9yeS5uYW1lKSB7XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KF9JbmplY3RhYmxlLCAnbmFtZScsIHtcblx0XHRcdHZhbHVlOiBgX0luamVjdGFibGVfJHtmYWN0b3J5Lm5hbWV9YCxcblx0XHR9KTtcblx0fVxuXG5cdHJldHVybiBfSW5qZWN0YWJsZSBhcyBUeXBlPFJldHVyblR5cGU8VEZhY3Rvcnk+Pjtcbn1cbiJdfQ==