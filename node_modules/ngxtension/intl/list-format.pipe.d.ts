import { type PipeTransform, type Provider } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * Provides a way to inject the options for the ListFormatPipe.
 *
 * @param options The options to use for the ListFormatPipe.
 * @returns The provider for the ListFormatPipe.
 */
export declare function provideListFormatOptions(options: Partial<Intl.ListFormatOptions>): Provider;
/**
 * This pipe is a wrapper around the [Intl.ListFormat](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/ListFormat) API.
 *
 * @returns The formatted list of values or the list as string in case of errors.
 */
export declare class ListFormatPipe implements PipeTransform {
    readonly defaultOptions: Intl.ListFormatOptions;
    readonly locale: string;
    /**
     * Transforms the list of values into a formatted string.
     *
     * @param value The list of values to format.
     * @param style Optional. The formatting style to use. Defaults to "long".
     * @param locale Optional. The locale to use for the transformation. Defaults to LOCALE_ID.
     * @returns The formatted list of values or the list as string in case of errors.
     */
    transform(value: Iterable<string>, style?: Intl.ListFormatOptions['style'], locale?: string | string[]): string;
    static ɵfac: i0.ɵɵFactoryDeclaration<ListFormatPipe, never>;
    static ɵpipe: i0.ɵɵPipeDeclaration<ListFormatPipe, "listFormat", true>;
}
