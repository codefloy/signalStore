import { type PipeTransform, type Provider } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * Provides a way to inject the options for the RelativeTimeFormatPipe.
 * @param options The options to use for the RelativeTimeFormatPipe.
 *
 * @returns The provider for the RelativeTimeFormatPipe.
 */
export declare function provideRelativeTimeFormatOptions(options: Partial<Intl.RelativeTimeFormatOptions>): Provider;
/**
 * This pipe is a wrapper around the [Intl.RelativeTimeFormat](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat) API.
 *
 * @returns The relative time format of the value or the value as it is in case of errors.
 */
export declare class RelativeTimeFormatPipe implements PipeTransform {
    readonly defaultOptions: Intl.RelativeTimeFormatOptions;
    readonly locale: string;
    /**
     * Transforms the value into a relative time format.
     *
     * @param value The value to format.
     * @param unit The unit of the value.
     * @param style Optional, the formatting style to use.
     * @param locale Optional, the locale to use for the formatting.
     * @returns The relative time format of the value or the value as it is in case of errors.
     */
    transform(value: number, unit: Intl.RelativeTimeFormatUnit, style?: Intl.RelativeTimeFormatOptions['style'], locale?: string): ReturnType<Intl.RelativeTimeFormat['format']>;
    static ɵfac: i0.ɵɵFactoryDeclaration<RelativeTimeFormatPipe, never>;
    static ɵpipe: i0.ɵɵPipeDeclaration<RelativeTimeFormatPipe, "relativeTimeFormat", true>;
}
