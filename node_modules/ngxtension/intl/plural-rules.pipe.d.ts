import { type PipeTransform, type Provider } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * Provides a way to inject the options for the PluralRules.
 *
 * @param options The options to use for the PluralRules.
 * @returns The provider for the PluralRules.
 */
export declare function providePluralRulesOptions(options: Partial<Intl.PluralRulesOptions>): Provider;
/**
 * This pipe is a wrapper around the [Intl.PluralRules](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/PluralRules) API.
 * It takes a value and returns the plural category for that value.
 *
 * @returns The plural category for the value or the value as string in case of errors.
 */
export declare class PluralRulesPipe implements PipeTransform {
    readonly defaultOptions: Intl.PluralRulesOptions;
    readonly locale: string;
    /**
     * Transforms the value into a plural category.
     *
     * @param value The value to transform.
     * @param locale Optional, the locale to use for the formatting.
     * @returns The plural category for the value or the value as string in case of errors.
     */
    transform(value: number, locale?: string): ReturnType<Intl.PluralRules['select']> | string;
    static ɵfac: i0.ɵɵFactoryDeclaration<PluralRulesPipe, never>;
    static ɵpipe: i0.ɵɵPipeDeclaration<PluralRulesPipe, "pluralRules", true>;
}
