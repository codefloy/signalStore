import { type InputSignal, type Signal, type Type } from '@angular/core';
export type InjectedInputs<T> = {
    [P in keyof T as T[P] extends InputSignal<any> ? P : never]: T[P] extends InputSignal<infer U> ? U : never;
};
export declare function inputs<TDir extends Type<any>>(dir: InstanceType<TDir>, dirType: TDir): Signal<InjectedInputs<InstanceType<TDir>>>;
/**
 * @deprecated Please use `inputs()` instead
 */
export declare function injectInputs<TDir extends Type<any>>(dir: InstanceType<TDir>, dirType: TDir): Signal<InjectedInputs<InstanceType<TDir>>>;
