{"version":3,"file":"ngxtension-form-events.mjs","sources":["../../../../libs/ngxtension/form-events/src/form-events.ts","../../../../libs/ngxtension/form-events/src/ngxtension-form-events.ts"],"sourcesContent":["import { Signal } from '@angular/core';\nimport { toSignal } from '@angular/core/rxjs-interop';\nimport {\n\tAbstractControl,\n\tControlEvent,\n\tFormControlStatus,\n\tPristineChangeEvent,\n\tStatusChangeEvent,\n\tTouchedChangeEvent,\n\tValueChangeEvent,\n} from '@angular/forms';\nimport {\n\tObservable,\n\tcombineLatest,\n\tdefer,\n\tdistinctUntilChanged,\n\tfilter,\n\tmap,\n\tstartWith,\n} from 'rxjs';\n\nfunction valueEvents$<T>(form: AbstractControl<T>) {\n\treturn form.events.pipe(\n\t\tfilter(\n\t\t\t(event: ControlEvent): event is ValueChangeEvent<typeof form.value> =>\n\t\t\t\tevent instanceof ValueChangeEvent,\n\t\t),\n\t);\n}\n\nfunction statusEvents$<T>(form: AbstractControl<T>) {\n\treturn form.events.pipe(\n\t\tfilter(\n\t\t\t(event: ControlEvent): event is StatusChangeEvent =>\n\t\t\t\tevent instanceof StatusChangeEvent,\n\t\t),\n\t);\n}\n\nfunction touchedEvents$<T>(form: AbstractControl<T>) {\n\treturn form.events.pipe(\n\t\tfilter(\n\t\t\t(event: ControlEvent): event is TouchedChangeEvent =>\n\t\t\t\tevent instanceof TouchedChangeEvent,\n\t\t),\n\t);\n}\n\nfunction pristineEvents$<T>(form: AbstractControl<T>) {\n\treturn form.events.pipe(\n\t\tfilter(\n\t\t\t(event: ControlEvent): event is PristineChangeEvent =>\n\t\t\t\tevent instanceof PristineChangeEvent,\n\t\t),\n\t);\n}\n\nfunction isValueEvent<T>(\n\tevent: ControlEvent | T,\n): event is ValueChangeEvent<T> {\n\treturn event instanceof ValueChangeEvent;\n}\nfunction isStatusEvent<T>(event: ControlEvent | T): event is StatusChangeEvent {\n\treturn event instanceof StatusChangeEvent;\n}\nfunction isPristineEvent<T>(\n\tevent: ControlEvent | T,\n): event is PristineChangeEvent {\n\treturn event instanceof PristineChangeEvent;\n}\nfunction isTouchedEvent<T>(\n\tevent: ControlEvent | T,\n): event is TouchedChangeEvent {\n\treturn event instanceof TouchedChangeEvent;\n}\n\ntype FormEventData<T> = {\n\tvalue: T;\n\tstatus: FormControlStatus;\n\ttouched: boolean;\n\tpristine: boolean;\n\tvalid: boolean;\n\tinvalid: boolean;\n\tpending: boolean;\n\tdirty: boolean;\n\tuntouched: boolean;\n};\n\nexport function allEventsObservable<T>(\n\tform: AbstractControl<T>,\n): Observable<FormEventData<T>>;\nexport function allEventsObservable<T>(\n\tform: AbstractControl,\n): Observable<FormEventData<T>>;\n\nexport function allEventsObservable<T>(\n\tform: AbstractControl<T>,\n): Observable<FormEventData<T>> {\n\treturn defer(() =>\n\t\tcombineLatest([\n\t\t\tvalueEvents$(form).pipe(\n\t\t\t\tstartWith(form.value),\n\t\t\t\tmap((value) => (isValueEvent(value) ? value.value : value)),\n\t\t\t\tdistinctUntilChanged(\n\t\t\t\t\t(previous, current) =>\n\t\t\t\t\t\tJSON.stringify(previous) === JSON.stringify(current),\n\t\t\t\t),\n\t\t\t),\n\t\t\tstatusEvents$(form).pipe(startWith(form.status)),\n\t\t\ttouchedEvents$(form).pipe(startWith(form.touched)),\n\t\t\tpristineEvents$(form).pipe(startWith(form.pristine)),\n\t\t]).pipe(\n\t\t\tmap(([valueParam, statusParam, touchedParam, pristineParam]) => {\n\t\t\t\t// Original values (plus value)\n\t\t\t\tconst stat: FormControlStatus | StatusChangeEvent = isStatusEvent(\n\t\t\t\t\tstatusParam,\n\t\t\t\t)\n\t\t\t\t\t? statusParam.status\n\t\t\t\t\t: statusParam;\n\t\t\t\tconst touch: boolean | TouchedChangeEvent = isTouchedEvent(touchedParam)\n\t\t\t\t\t? touchedParam.touched\n\t\t\t\t\t: touchedParam;\n\t\t\t\tconst prist: boolean | PristineChangeEvent = isPristineEvent(\n\t\t\t\t\tpristineParam,\n\t\t\t\t)\n\t\t\t\t\t? pristineParam.pristine\n\t\t\t\t\t: pristineParam;\n\n\t\t\t\t// Derived values - not directly named as events but are aliases for something that can be derived from original values\n\t\t\t\tconst validDerived = stat === 'VALID';\n\t\t\t\tconst invalidDerived = stat === 'INVALID';\n\t\t\t\tconst pendingDerived = stat === 'PENDING';\n\t\t\t\tconst dirtyDerived = !prist;\n\t\t\t\tconst untouchedDerived = !touch;\n\n\t\t\t\treturn {\n\t\t\t\t\tvalue: valueParam,\n\t\t\t\t\tstatus: stat,\n\t\t\t\t\ttouched: touch,\n\t\t\t\t\tpristine: prist,\n\t\t\t\t\tvalid: validDerived,\n\t\t\t\t\tinvalid: invalidDerived,\n\t\t\t\t\tpending: pendingDerived,\n\t\t\t\t\tdirty: dirtyDerived,\n\t\t\t\t\tuntouched: untouchedDerived,\n\t\t\t\t};\n\t\t\t}),\n\t\t),\n\t);\n}\n\nexport function allEventsSignal<T>(\n\tform: AbstractControl<T>,\n): Signal<FormEventData<T>>;\nexport function allEventsSignal<T>(\n\tform: AbstractControl,\n): Signal<FormEventData<T>>;\n\nexport function allEventsSignal<T>(\n\tform: AbstractControl<T>,\n): Signal<FormEventData<T>> {\n\treturn toSignal(allEventsObservable(form), {\n\t\tinitialValue: {\n\t\t\tvalue: form.value,\n\t\t\tstatus: form.status,\n\t\t\tpristine: form.pristine,\n\t\t\ttouched: form.touched,\n\t\t\tvalid: form.valid,\n\t\t\tinvalid: form.invalid,\n\t\t\tpending: form.pending,\n\t\t\tdirty: form.dirty,\n\t\t\tuntouched: form.untouched,\n\t\t},\n\t});\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}