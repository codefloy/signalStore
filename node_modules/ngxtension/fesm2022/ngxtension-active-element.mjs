import { DOCUMENT } from '@angular/common';
import { inject } from '@angular/core';
import { assertInjector } from 'ngxtension/assert-injector';
import { merge, fromEvent, map, shareReplay } from 'rxjs';

function injectActiveElement(injector) {
    return assertInjector(injectActiveElement, injector, () => {
        const doc = inject(DOCUMENT);
        return merge(fromEvent(doc, 'focus', { capture: true, passive: true }).pipe(map(() => true)), fromEvent(doc, 'blur', { capture: true, passive: true }).pipe(map(() => false))).pipe(map((hasFocus) => (hasFocus ? doc.activeElement : null)), shareReplay({ refCount: true, bufferSize: 1 }));
    });
}

/**
 * Generated bundle index. Do not edit.
 */

export { injectActiveElement };
//# sourceMappingURL=ngxtension-active-element.mjs.map
