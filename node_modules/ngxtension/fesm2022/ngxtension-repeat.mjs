import { NgFor } from '@angular/common';
import * as i0 from '@angular/core';
import { Directive, Input } from '@angular/core';

/**
 * An extension of `NgFor` directive that allows consumers to iterate "x times" instead of through a list of items
 *
 * @param {number} count - a positive integer starting from 0
 *
 * @example
 *
 * ```html
 * <!-- before -->
 * <p *ngFor="let i of [0, 1, 2]">{{i}}</p>
 * <!-- after -->
 * <p *ngFor="let i; repeat: 3">{{i}}</p>
 * ```
 */
class Repeat extends NgFor {
    set ngForRepeat(count) {
        if (Number.isNaN(count) || !Number.isInteger(count)) {
            throw new Error(`[Repeat] repeat requires an integer but ${count} is passed in`);
        }
        this.ngForOf = Array.from({ length: count }, (_, i) => i);
        this.ngForTrackBy = (i) => i;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.0.3", ngImport: i0, type: Repeat, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "18.0.3", type: Repeat, isStandalone: true, selector: "[ngFor][ngForRepeat]", inputs: { ngForRepeat: "ngForRepeat" }, usesInheritance: true, ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.0.3", ngImport: i0, type: Repeat, decorators: [{
            type: Directive,
            args: [{
                    standalone: true,
                    selector: '[ngFor][ngForRepeat]',
                }]
        }], propDecorators: { ngForRepeat: [{
                type: Input
            }] } });

/**
 * Generated bundle index. Do not edit.
 */

export { Repeat };
//# sourceMappingURL=ngxtension-repeat.mjs.map
