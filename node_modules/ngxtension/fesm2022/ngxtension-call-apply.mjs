import * as i0 from '@angular/core';
import { Pipe } from '@angular/core';

const error_this = function () {
    throw new Error(`DON'T USE this INSIDE A FUNCTION CALLED BY | call OR | apply IT MUST BE A PURE FUNCTION!`);
};
const NOTHIS = !('Proxy' in window)
    ? Object.seal({})
    : new Proxy({}, {
        get: error_this,
        set: error_this,
        deleteProperty: error_this,
        has: error_this,
    });
class CallPipe {
    transform(value, args) {
        if (typeof args !== 'function')
            throw new TypeError('You must pass a PURE funciton to | call');
        return args?.call(NOTHIS, value);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.0.3", ngImport: i0, type: CallPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe }); }
    static { this.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "14.0.0", version: "18.0.3", ngImport: i0, type: CallPipe, isStandalone: true, name: "call" }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.0.3", ngImport: i0, type: CallPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'call',
                    pure: true,
                    standalone: true,
                }]
        }] });
class ApplyPipe {
    transform(fn, ...args) {
        if (typeof fn !== 'function')
            throw new TypeError('You must use | apply on a PURE function');
        return fn.apply(NOTHIS, args);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.0.3", ngImport: i0, type: ApplyPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe }); }
    static { this.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "14.0.0", version: "18.0.3", ngImport: i0, type: ApplyPipe, isStandalone: true, name: "apply" }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.0.3", ngImport: i0, type: ApplyPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'apply',
                    pure: true,
                    standalone: true,
                }]
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { ApplyPipe, CallPipe };
//# sourceMappingURL=ngxtension-call-apply.mjs.map
