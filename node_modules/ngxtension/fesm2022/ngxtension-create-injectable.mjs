import * as i0 from '@angular/core';
import { Injectable } from '@angular/core';

function createInjectable(factory, { providedIn = 'root' } = {}) {
    class _Injectable {
        constructor() {
            const result = factory();
            for (const key of Reflect.ownKeys(result)) {
                Object.defineProperty(this, key, {
                    get: () => result[key],
                    set: (value) => {
                        result[key] = value;
                    },
                    enumerable: true,
                    configurable: true,
                });
            }
        }
        static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.0.3", ngImport: i0, type: _Injectable, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }
        static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "18.0.3", ngImport: i0, type: _Injectable, providedIn: providedIn === 'scoped' ? null : providedIn }); }
    }
    i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.0.3", ngImport: i0, type: _Injectable, decorators: [{
                type: Injectable,
                args: [{ providedIn: providedIn === 'scoped' ? null : providedIn }]
            }], ctorParameters: () => [] });
    if (factory.name) {
        Object.defineProperty(_Injectable, 'name', {
            value: `_Injectable_${factory.name}`,
        });
    }
    return _Injectable;
}

/**
 * Generated bundle index. Do not edit.
 */

export { createInjectable };
//# sourceMappingURL=ngxtension-create-injectable.mjs.map
