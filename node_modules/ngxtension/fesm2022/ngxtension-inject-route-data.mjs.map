{"version":3,"file":"ngxtension-inject-route-data.mjs","sources":["../../../../libs/ngxtension/inject-route-data/src/inject-route-data.ts","../../../../libs/ngxtension/inject-route-data/src/ngxtension-inject-route-data.ts"],"sourcesContent":["import { assertInInjectionContext, inject, type Signal } from '@angular/core';\nimport { toSignal } from '@angular/core/rxjs-interop';\nimport { ActivatedRoute, type Data } from '@angular/router';\nimport { map } from 'rxjs';\n\ntype RouteDataTransformFn<T> = (data: Data) => T;\n\n/**\n * The `injectRouteData` function allows you to access and manipulate data from the current route.\n *\n * @returns {Signal} A `Signal` that emits the entire route data object.\n */\nexport function injectRouteData(): Signal<Data>;\n\n/**\n * The `injectRouteData` function allows you to access and manipulate data from the current route.\n * @param {string} key - The name of the route data object key to retrieve.\n * @returns {Signal} A `Signal` that emits the value of the specified route data object key\n */\nexport function injectRouteData<T>(key: keyof Data): Signal<T | null>;\n\n/**\n * The `injectQueryParams` function allows you to access and manipulate query parameters from the current route.\n *\n * @param {RouteDataTransformFn} transform - The name of the query parameter to retrieve.\n * @returns {Signal} A `Signal` that emits the transformed value of the specified route data object key.\n */\nexport function injectRouteData<T>(\n\ttransform: RouteDataTransformFn<T>,\n): Signal<T>;\n\nexport function injectRouteData<T>(\n\tkeyOrTransform?: keyof Data | ((data: Data) => T),\n) {\n\tassertInInjectionContext(injectRouteData);\n\tconst route = inject(ActivatedRoute);\n\tconst initialRouteData = route.snapshot.data || {};\n\n\tconst getDataParam =\n\t\ttypeof keyOrTransform === 'function'\n\t\t\t? keyOrTransform\n\t\t\t: (data: Data) =>\n\t\t\t\t\tkeyOrTransform ? data?.[keyOrTransform] ?? null : data;\n\n\treturn toSignal(route.data.pipe(map(getDataParam)), {\n\t\tinitialValue: getDataParam(initialRouteData),\n\t});\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;;AA+BM,SAAU,eAAe,CAC9B,cAAiD,EAAA;IAEjD,wBAAwB,CAAC,eAAe,CAAC,CAAC;AAC1C,IAAA,MAAM,KAAK,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC;IACrC,MAAM,gBAAgB,GAAG,KAAK,CAAC,QAAQ,CAAC,IAAI,IAAI,EAAE,CAAC;AAEnD,IAAA,MAAM,YAAY,GACjB,OAAO,cAAc,KAAK,UAAU;AACnC,UAAE,cAAc;UACd,CAAC,IAAU,KACX,cAAc,GAAG,IAAI,GAAG,cAAc,CAAC,IAAI,IAAI,GAAG,IAAI,CAAC;AAE3D,IAAA,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,EAAE;AACnD,QAAA,YAAY,EAAE,YAAY,CAAC,gBAAgB,CAAC;AAC5C,KAAA,CAAC,CAAC;AACJ;;AC/CA;;AAEG;;;;"}