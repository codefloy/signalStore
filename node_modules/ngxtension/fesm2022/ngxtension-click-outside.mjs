import { DOCUMENT } from '@angular/common';
import * as i0 from '@angular/core';
import { inject, NgZone, ElementRef, EventEmitter, Directive, Output } from '@angular/core';
import { createInjectionToken } from 'ngxtension/create-injection-token';
import { injectDestroy } from 'ngxtension/inject-destroy';
import { Subject, fromEvent, takeUntil, filter } from 'rxjs';

/*
 * This function is used to detect clicks in the document.
 * It is used by the clickOutside directive.
 */
const [injectDocumentClick] = createInjectionToken(() => {
    const click$ = new Subject();
    const [ngZone, document] = [inject(NgZone), inject(DOCUMENT)];
    ngZone.runOutsideAngular(() => {
        fromEvent(document, 'click').subscribe(click$);
    });
    return click$;
});
/*
 * This directive is used to detect clicks outside the element.
 *
 * Example:
 * <div (clickOutside)="close()"></div>
 *
 */
class ClickOutside {
    constructor() {
        this.ngZone = inject(NgZone);
        this.elementRef = inject(ElementRef);
        this.documentClick$ = injectDocumentClick();
        this.destroy$ = injectDestroy();
        /*
         * This event is emitted when a click occurs outside the element.
         */
        this.clickOutside = new EventEmitter();
    }
    ngOnInit() {
        this.documentClick$
            .pipe(takeUntil(this.destroy$), filter((event) => !this.elementRef.nativeElement.contains(event.target)))
            .subscribe((event) => {
            this.ngZone.run(() => this.clickOutside.emit(event));
        });
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.0.3", ngImport: i0, type: ClickOutside, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "18.0.3", type: ClickOutside, isStandalone: true, selector: "[clickOutside]", outputs: { clickOutside: "clickOutside" }, ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.0.3", ngImport: i0, type: ClickOutside, decorators: [{
            type: Directive,
            args: [{ selector: '[clickOutside]', standalone: true }]
        }], propDecorators: { clickOutside: [{
                type: Output
            }] } });

/**
 * Generated bundle index. Do not edit.
 */

export { ClickOutside };
//# sourceMappingURL=ngxtension-click-outside.mjs.map
