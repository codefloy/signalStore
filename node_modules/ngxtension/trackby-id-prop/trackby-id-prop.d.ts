import { type NgIterable } from '@angular/core';
import * as i0 from "@angular/core";
export declare class TrackById<T extends {
    id: string | number;
}> {
    ngForOf: NgIterable<T>;
    private ngFor;
    constructor();
    static ɵfac: i0.ɵɵFactoryDeclaration<TrackById<any>, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<TrackById<any>, "[ngForTrackById]", never, { "ngForOf": { "alias": "ngForOf"; "required": false; }; }, {}, never, never, true, never>;
}
export declare class TrackByProp<T> {
    ngForOf: NgIterable<T>;
    private ngFor;
    set ngForTrackByProp(trackByProp: keyof T);
    static ɵfac: i0.ɵɵFactoryDeclaration<TrackByProp<any>, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<TrackByProp<any>, "[ngForTrackByProp]", never, { "ngForOf": { "alias": "ngForOf"; "required": false; }; "ngForTrackByProp": { "alias": "ngForTrackByProp"; "required": true; }; }, {}, never, never, true, never>;
}
export declare const TRACK_BY_DIRECTIVES: readonly [typeof TrackById, typeof TrackByProp];
