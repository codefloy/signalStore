import { type Signal } from '@angular/core';
import { type ToSignalOptions } from '@angular/core/rxjs-interop';
import type { Observable, Subscribable } from 'rxjs';
export declare function toLazySignal<T>(source: Observable<T> | Subscribable<T>): Signal<T | undefined>;
export declare function toLazySignal<T>(source: Observable<T> | Subscribable<T>, options: ToSignalOptions & {
    initialValue?: undefined;
    requireSync?: false;
}): Signal<T | undefined>;
export declare function toLazySignal<T>(source: Observable<T> | Subscribable<T>, options: ToSignalOptions & {
    initialValue?: null;
    requireSync?: false;
}): Signal<T | null>;
export declare function toLazySignal<T>(source: Observable<T> | Subscribable<T>, options: ToSignalOptions & {
    initialValue?: undefined;
    requireSync: true;
}): Signal<T>;
export declare function toLazySignal<T, const U extends T>(source: Observable<T> | Subscribable<T>, options: ToSignalOptions & {
    initialValue: U;
    requireSync?: false;
}): Signal<T | U>;
