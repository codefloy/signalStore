"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.initGenerator = void 0;
const tslib_1 = require("tslib");
const devkit_1 = require("@nx/devkit");
function initGenerator(tree) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        var _a, _b;
        devkit_1.logger.log('Initializing ngxtension...');
        const packageJson = (0, devkit_1.readJson)(tree, 'package.json');
        const version = ((_a = packageJson['dependencies']) === null || _a === void 0 ? void 0 : _a['ngxtension']) ||
            ((_b = packageJson['devDependencies']) === null || _b === void 0 ? void 0 : _b['ngxtension']) ||
            'latest';
        (0, devkit_1.addDependenciesToPackageJson)(tree, { ngxtension: version }, {});
        devkit_1.logger.info('Turning on skipLibCheck...');
        const tsConfigPath = tree.exists('tsconfig.base.json')
            ? 'tsconfig.base.json'
            : 'tsconfig.json';
        (0, devkit_1.updateJson)(tree, tsConfigPath, (json) => {
            var _a;
            if (!('skipLibCheck' in json.compilerOptions) ||
                ((_a = json.compilerOptions) === null || _a === void 0 ? void 0 : _a.skipLibCheck) === false) {
                json.compilerOptions.skipLibCheck = true;
            }
            if (!json.compilerOptions['strict']) {
                devkit_1.logger.warn(`[ngxtension] Initialization script detects that "strict" mode is off in the root TSConfig.
Some utilities will not work properly without strict mode.`);
            }
            return json;
        });
        yield (0, devkit_1.formatFiles)(tree);
        return () => {
            (0, devkit_1.installPackagesTask)(tree);
        };
    });
}
exports.initGenerator = initGenerator;
exports.default = initGenerator;
//# sourceMappingURL=generator.js.map