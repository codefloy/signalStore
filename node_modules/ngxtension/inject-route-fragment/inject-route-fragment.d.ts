import { type Injector, type Signal } from '@angular/core';
export interface InjectRouteFragmentOptions<T = unknown> {
    /**
     * A transformation function.
     *
     * @param fragment - The fragment value to transform.
     * @returns The transformed value.
     */
    transform?: (fragment: string | null) => T;
    /**
     * The optional "custom" Injector. If this is not provided, will be retrieved from the current injection context
     */
    injector?: Injector;
}
/**
 * The `injectRouteFragment` function allows you to access and transform url fragment from the current route.
 *
 * @returns {Signal} A `Signal` that emits the route fragment.
 */
export declare function injectRouteFragment(): Signal<string | null>;
/**
 * The `injectRouteFragment` function allows you to access and transform url fragment from the current route.
 *
 * @param {InjectRouteFragmentOptions} options - inject options like transform fn.
 * @returns {Signal} A `Signal` that emits the transformed value of url fragment.
 */
export declare function injectRouteFragment<T>(options: InjectRouteFragmentOptions<T>): Signal<T>;
